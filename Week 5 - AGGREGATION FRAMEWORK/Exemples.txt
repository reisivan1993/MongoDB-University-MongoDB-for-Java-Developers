Simple Aggregation Example 
db.products.aggregate([
	{$group:{_id:"$category",num_products:{$sum:1}}}
])

Simple Example Expanded 
db.fun.insert([{ "_id" : 0, "a" : 0, "b" : 0, "c" : 21 },
{ "_id" : 1, "a" : 0, "b" : 0, "c" : 54 },
{ "_id" : 2, "a" : 0, "b" : 1, "c" : 52 },
{ "_id" : 3, "a" : 0, "b" : 1, "c" : 17 },
{ "_id" : 4, "a" : 1, "b" : 0, "c" : 22 },
{ "_id" : 5, "a" : 1, "b" : 0, "c" : 5 },
{ "_id" : 6, "a" : 1, "b" : 1, "c" : 87 },
{ "_id" : 7, "a" : 1, "b" : 1, "c" : 97 }])

db.fun.aggregate([
	{$group:{_id:{a:"$a", b:"$b"}, c:{$max:"$c"}}}, 
	{$group:{_id:"$_id.a", c:{$min:"$c"}}}
])

Compound Grouping 
db.stuff.aggregate([
	{$group:{_id:{'moe':'$a','larry':'$b','curly':'$c'}}}
])
			
Using $sum			
db.zips.aggregate([
	{$group:{_id:"$state",population:{$sum:"$pop"}}}
])

Using $avg 
db.zips.aggregate([
	{$group:{_id:"$state",population:{$avg:"$pop"}}}
])

Using $addToSet
db.zips.aggregate([
	{$group:{_id:"$city",postal_codes:{$addToSet:"$_id"}}}
])

Using $max and $min
db.zips.aggregate([
	{$group:{_id:"$state",pop:{$max:"$pop"}}}
])

Using $project
db.zips.aggregate([
	{$project:{_id:0, city:{$toLower:"$city"}, pop:1, state:1, zip:"$_id"}}
])

Using $match 
db.zips.aggregate([
	{$match:{pop :  { $gt: 100000 }}}
])

Using $sort 
db.zips.aggregate([
	{$sort:{state:1,city:1}}
])
